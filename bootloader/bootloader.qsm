.entry boot

::boot

~~ Check if bootloader lives in RAM or BROM
mov r0 rinp
shr r0 r0 zero(21)
and r0 r0 zero(1)
jrz zero(rel copyBootloaderToRam) r0

::mainProgram
~~ show 'ram' message on 7-segment display
lui rssd 0b0000010101110111
lli rssd 0b0101010100000000

li r0 0b1111111111111111

::mainLoop
mov r1 rinp
and r1 r1 r0
mov rled r1

jpr zero(rel mainLoop)

::copyBootloaderToRam
~~ show 'boot' message on 7-segment display
lui rssd 0b0001111100011101
lli rssd 0b0001110100001111

mov r0 zero
::copyLoop
ld r1 r0
~~ Show current instruction
mov rled r1
st r0 r1

lui r1 0b0000000000000001
lli r1 0b11111111111111111111111111111111
dec r1 r1
jrnz zero(-4) r1

add r0 r0 zero(4)
sub r2 r0 zero(bootloaderSize)

jrnz zero(rel copyLoop) r2

int r0 0

::bootloaderSize
